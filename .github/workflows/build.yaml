name: Reusable build

on:
  workflow_call:
    inputs:
      repo:
        required: false
        type: string
        default: ${{ github.repository }}
      actor:
        required: false
        type: string
        default: ${{ github.actor }}
      caller_sha:
        required: false
        type: string
        default: ${{ github.sha }}
      dockerfile:
        required: false
        type: string
        default: Dockerfile
      java_version:
        required: false
        type: string
    secrets:
      GH_TOKEN:
        required: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GH_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: .cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup java jdk if java/kotlin
        if: ${{ inputs.java_version != '' }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ inputs.java_version }}

      - name: Package & run tests if maven
        if: ${{ inputs.java_version != '' }}
        run: mvn clean install --no-transfer-progress
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./${{ inputs.dockerfile }}
          push: false
          tags: 'test_dev_build'
          labels: 'dependabot'
          cache-from: type=local,src=.buildx-cache
          cache-to: type=local,dest=.buildx-cache
          build-args:  |
            GITHUB_TOKEN=${{ secrets.GH_TOKEN }}
