name: Reusable build

on:
  workflow_call:
    inputs:
      build_context:
        required: false
        type: string
        default: ./
      build_env:
        required: false
        type: boolean
      build_env_name:
        required: false
        type: string
      build_env_value:
        required: false
        type: string
      dockerfile:
        required: false
        type: string
        default: Dockerfile
      dockerfile_context:
        required: false
        type: string
        default: ./
      java_version:
        required: false
        type: string

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup java jdk if java/kotlin
        if: ${{ inputs.java_version != '' }}
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: ${{ inputs.java_version }}

      - name: Package & run tests if maven
        if: ${{ inputs.java_version != '' }}
        run: mvn clean install --no-transfer-progress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        if: ${{ !inputs.build_env }}
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.build_context }}
          file: ${{ inputs.build_context }}${{ inputs.dockerfile }}
          push: false
          tags: 'test_build'
          labels: 'test_build'
          cache-from: type=gha
          cache-to: type=gha, mode=max
          provenance: false
          build-args:  |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

      - name: Build (with build env)
        if: ${{ inputs.build_env }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.build_context }}
          file: ${{ inputs.build_context }}${{ inputs.dockerfile }}
          push: false
          tags: 'test_build'
          labels: 'test_build'
          cache-from: type=gha
          cache-to: type=gha, mode=max
          provenance: false
          build-args:  |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            ${{ inputs.build_env_name }}=${{ inputs.build_env_value }}
