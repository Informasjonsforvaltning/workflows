name: Reusable rust test

on:
  workflow_call:
    inputs:
      cargo_args:
        required: false
        type: string
        default: --all
      cargo_command:
        required: false
        type: string
        default: test
      cargo_incremental:
        required: false
        type: string
        default: "0"
      cargo_rustflags:
        required: false
        type: string
        default: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
      cargo_rustdocflags:
        required: false
        type: string
        default: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
      codecov_files:
        required: false
        type: string
        default: ./lcov.txt
      grcov_config:
        required: false
        type: string
        default: ./grcov.yml
      repo:
        required: false
        type: string
        default: ${{ github.repository }}
      rust_env:
        required: false
        type: string
      toolchain_tc:
        required: false
        type: string
        default: nightly
      toolchain_override:
        required: false
        type: boolean
        default: true
      toolchain_profile:
        required: false
        type: string
        default: minimal
      docker_compose_file:
        required: false
        type: string
        default: ./docker-compose.yaml
    secrets:
      GH_TOKEN:
        required: true
      CODECOV_TOKEN:
        required: false

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GH_TOKEN }}

      - name: Install toolchain
        run: |
          rustup update
          rustup toolchain install ${{ inputs.toolchain_tc }}
          rustup set profile 'minimal'

      - name: Check docker_compose_file existence
        id: check_docker_compose
        uses: andstor/file-existence-action@v3
        with:
          files: ${{ inputs.docker_compose_file }}

      - name: Docker Compose
        uses: isbang/compose-action@v1.5.1
        if: steps.check_docker_compose.outputs.files_exists == 'true'
        with:
          compose-file: ${{ inputs.docker_compose_file }}

      - name: Set rust test env
        run: echo "${{ inputs.rust_env }}" >> $GITHUB_ENV

      - name: Run tests
        run: |
          cargo test ${{ inputs.cargo_args }}
        env:
          CARGO_INCREMENTAL: ${{ inputs.cargo_incremental }}
          RUSTFLAGS: ${{ inputs.cargo_rustflags }}
          RUSTDOCFLAGS: ${{ inputs.cargo_rustdocflags }}

      - name: Download grcov
        run: |
          cargo install grcov       

      - name: Run xtask coverage
        run: |
          grcov . --binary-path ./target/debug/deps/ -s . -t lcov --branch --ignore-not-existing --ignore '../*' --ignore "/*" -o target/coverage/tests.lcov

      - name: Codecov upload
        uses: codecov/codecov-action@v4
        with:
          token: $ {{ secrets.CODECOV_TOKEN }}
          files: ${{ inputs.codecov_files }}
